#!/bin/sh

. ./shpy

testCalledWithNoArgs_ShouldReturnUsage() {
    local output

    output=$(wasSpyCalledWith 2>&1 >/dev/null)

    assertFalse '`wasSpyCalledWith` is false' $?
    printf '%s\n' "$output" | grep -q '^Usage:'
    assertTrue 'output begins with "Usage:"' $?
}

testCalledWithInvalidSpy_ShouldReturnError() {
    local output

    output=$(wasSpyCalledWith invalid_spy 2>&1 >/dev/null)

    assertFalse '`wasSpyCalledWith invalid_spy` is false' $?
    printf '%s\n' "$output" | grep -q '^Error:'
    assertTrue 'output begins with "Error:"' $?
}

testNoArgs_ReturnsTrueWhenSpyCalledWithNoArgs() {
    createSpy dosomething || fail 'createSpy dosomething'
    dosomething

    wasSpyCalledWith dosomething

    assertTrue '`wasSpyCalledWith dosomething` is true' $?
}

testOneArg_ReturnsFalseWhenSpyCalledWithNoArgs() {
    createSpy dosomething || fail 'createSpy dosomething'
    dosomething

    wasSpyCalledWith dosomething somearg

    assertFalse '`wasSpyCalledWith dosomething somearg` is false' $?
}

testOneArg_ReturnsTrueWhenSpyCalledWithSameArg() {
    createSpy dosomething || fail 'createSpy dosomething'
    dosomething somearg

    wasSpyCalledWith dosomething somearg

    assertTrue '`wasSpyCalledWith dosomething somearg` is true' $?
}

testBlankArg_ReturnsFalseWhenSpyCalledWithNoArgs() {
    createSpy dosomething || fail 'createSpy dosomething'
    dosomething ""

    wasSpyCalledWith dosomething

    assertFalse '`wasSpyCalledWith dosomething` is false' $?
}

testArgContainingWhitespace_ReturnsTrueWhenSpyCalledWithSameArg() {
    createSpy dosomething || fail 'createSpy dosomething'
    dosomething ' some arg
with embedded newlines
	and tabs	
and trailing whitespace  '

    wasSpyCalledWith dosomething ' some arg
with embedded newlines
	and tabs	
and trailing whitespace  '

    assertTrue '`wasSpyCalledWith dosomething somearg` is true' $?
}

testTwoArgs_ReturnsTrueWhenSpyCalledWithSameArgs() {
    createSpy dosomething || fail 'createSpy dosomething'
    dosomething somearg anotherarg

    wasSpyCalledWith dosomething somearg anotherarg

    assertTrue '`wasSpyCalledWith dosomething somearg anotherarg` is true' $?
}

oneTimeTearDown() {
    cleanupSpies
}

. shunit2
